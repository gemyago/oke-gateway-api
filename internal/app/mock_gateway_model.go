// Code generated by mockery. DO NOT EDIT.

//go:build !release

package app

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	v1 "sigs.k8s.io/gateway-api/apis/v1"
)

// MockgatewayModel is an autogenerated mock type for the gatewayModel type
type MockgatewayModel struct {
	mock.Mock
}

type MockgatewayModel_Expecter struct {
	mock *mock.Mock
}

func (_m *MockgatewayModel) EXPECT() *MockgatewayModel_Expecter {
	return &MockgatewayModel_Expecter{mock: &_m.Mock}
}

// programGateway provides a mock function with given fields: ctx, gw
func (_m *MockgatewayModel) programGateway(ctx context.Context, gw *v1.Gateway) error {
	ret := _m.Called(ctx, gw)

	if len(ret) == 0 {
		panic("no return value specified for programGateway")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *v1.Gateway) error); ok {
		r0 = rf(ctx, gw)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockgatewayModel_programGateway_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'programGateway'
type MockgatewayModel_programGateway_Call struct {
	*mock.Call
}

// programGateway is a helper method to define mock.On call
//   - ctx context.Context
//   - gw *v1.Gateway
func (_e *MockgatewayModel_Expecter) programGateway(ctx interface{}, gw interface{}) *MockgatewayModel_programGateway_Call {
	return &MockgatewayModel_programGateway_Call{Call: _e.mock.On("programGateway", ctx, gw)}
}

func (_c *MockgatewayModel_programGateway_Call) Run(run func(ctx context.Context, gw *v1.Gateway)) *MockgatewayModel_programGateway_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*v1.Gateway))
	})
	return _c
}

func (_c *MockgatewayModel_programGateway_Call) Return(_a0 error) *MockgatewayModel_programGateway_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockgatewayModel_programGateway_Call) RunAndReturn(run func(context.Context, *v1.Gateway) error) *MockgatewayModel_programGateway_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockgatewayModel creates a new instance of MockgatewayModel. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockgatewayModel(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockgatewayModel {
	mock := &MockgatewayModel{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

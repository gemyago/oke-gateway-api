// Code generated by apigen DO NOT EDIT.

package handlers

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"

	. "github.com/gemyago/oke-gateway-api/internal/api/http/v1routes/models"
)

// Below is to workaround unused imports.
var _ = http.MethodGet
var _ = time.Time{}
var _ = json.Unmarshal
var _ = fmt.Sprint
type _ func() Error



type healthControllerBuilder struct {
	// GET /health
	//
	// Request type: none
	//
	// Response type: HealthResponsePayload
	HealthCheck genericHandlerBuilder[
		void,
		*HealthResponsePayload,
		handlerActionFuncNoParams[void, *HealthResponsePayload],
		httpHandlerActionFuncNoParams[void, *HealthResponsePayload],
	]
}

func newHealthControllerBuilder(app *RootHandler) *healthControllerBuilder {
	return &healthControllerBuilder{
		// GET /health
		HealthCheck: newGenericHandlerBuilder(
			app,
			newHandlerAdapterNoParams[
				void,
				*HealthResponsePayload,
			](),
			newHTTPHandlerAdapterNoParams[
				void,
				*HealthResponsePayload,
			](),
			makeActionBuilderParams[
				void,
				*HealthResponsePayload,
			]{
				defaultStatus: 200,
				paramsParser:  makeVoidParamsParser(app),
			},
		),
	}
}

type HealthController interface {
	// GET /health
	//
	// Request type: none
	//
	// Response type: HealthResponsePayload
	HealthCheck(NoParamsHandlerBuilder[
		*HealthResponsePayload,
	]) http.Handler
}

// RegisterHealthRoutes will attach the following routes to the root handler:
// 
// - GET /health
// 
// Routes will use provided controller to handle requests.
func(rootHandler *RootHandler) RegisterHealthRoutes(controller HealthController) *RootHandler {
	builder := newHealthControllerBuilder(rootHandler)
	rootHandler.router.HandleRoute("GET", "/health", controller.HealthCheck(builder.HealthCheck))
	return rootHandler
}
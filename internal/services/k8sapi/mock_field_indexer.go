// Code generated by mockery. DO NOT EDIT.

//go:build !release

package k8sapi

import (
	context "context"

	client "sigs.k8s.io/controller-runtime/pkg/client"

	mock "github.com/stretchr/testify/mock"
)

// MockFieldIndexer is an autogenerated mock type for the FieldIndexer type
type MockFieldIndexer struct {
	mock.Mock
}

type MockFieldIndexer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockFieldIndexer) EXPECT() *MockFieldIndexer_Expecter {
	return &MockFieldIndexer_Expecter{mock: &_m.Mock}
}

// IndexField provides a mock function with given fields: ctx, obj, field, extractValue
func (_m *MockFieldIndexer) IndexField(ctx context.Context, obj client.Object, field string, extractValue client.IndexerFunc) error {
	ret := _m.Called(ctx, obj, field, extractValue)

	if len(ret) == 0 {
		panic("no return value specified for IndexField")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, client.Object, string, client.IndexerFunc) error); ok {
		r0 = rf(ctx, obj, field, extractValue)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockFieldIndexer_IndexField_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IndexField'
type MockFieldIndexer_IndexField_Call struct {
	*mock.Call
}

// IndexField is a helper method to define mock.On call
//   - ctx context.Context
//   - obj client.Object
//   - field string
//   - extractValue client.IndexerFunc
func (_e *MockFieldIndexer_Expecter) IndexField(ctx interface{}, obj interface{}, field interface{}, extractValue interface{}) *MockFieldIndexer_IndexField_Call {
	return &MockFieldIndexer_IndexField_Call{Call: _e.mock.On("IndexField", ctx, obj, field, extractValue)}
}

func (_c *MockFieldIndexer_IndexField_Call) Run(run func(ctx context.Context, obj client.Object, field string, extractValue client.IndexerFunc)) *MockFieldIndexer_IndexField_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(client.Object), args[2].(string), args[3].(client.IndexerFunc))
	})
	return _c
}

func (_c *MockFieldIndexer_IndexField_Call) Return(_a0 error) *MockFieldIndexer_IndexField_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockFieldIndexer_IndexField_Call) RunAndReturn(run func(context.Context, client.Object, string, client.IndexerFunc) error) *MockFieldIndexer_IndexField_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockFieldIndexer creates a new instance of MockFieldIndexer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockFieldIndexer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockFieldIndexer {
	mock := &MockFieldIndexer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

name: Tag Images

on:
  workflow_call:

jobs:
  publish:
    name: Tag Release Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }} 

      - name: Set up build dependencies (crane)
        working-directory: build
        run: make install-crane

      - name: Authenticate crane to GHCR
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | ./build/bin/crane auth login ghcr.io -u "${{ github.actor }}" --password-stdin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare and Tag Images
        env:
          SOURCE_COMMIT_SHA: ${{ github.sha }}
          GIT_REF: ${{ github.ref }}
          LATEST_FLAG: ${{ !github.event.release.prerelease && '--latest' || '' }}
        run: |
          make -C build docker/.remote-image-names
          echo "Base image names generated in build/docker/.remote-image-names"
          cat build/docker/.remote-image-names
          
          build/scripts/read-build-config.sh --key stable_branches > /tmp/stable-branches.txt
          echo "Stable branches: $(cat /tmp/stable-branches.txt)"
          
          build/scripts/resolve-docker-tags.sh \
            --commit-sha "$SOURCE_COMMIT_SHA" \
            --git-ref "$GIT_REF" \
            --stable-branches "$(cat /tmp/stable-branches.txt)" \
            $LATEST_FLAG > /tmp/target-tags.txt
          echo "Target tags calculated"
          cat /tmp/target-tags.txt

          echo "Tagging remote images..."
          build/scripts/tag-remote-images.sh \
            --source-commit-sha "$SOURCE_COMMIT_SHA" \
            --target-tags "$(cat /tmp/target-tags.txt)" \
            --remote-images-file build/docker/.remote-image-names
          
          echo "Image tagging process finished."
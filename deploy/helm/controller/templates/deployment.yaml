apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oke-gateway-api-controller.fullname" . }}
  namespace: {{ include "oke-gateway-api-controller.namespace" . }}
  labels:
    {{- include "oke-gateway-api-controller.labels" . | nindent 4 }}
spec:
  replicas: 1 # Consider making this configurable via values.yaml
  selector:
    matchLabels:
      {{- include "oke-gateway-api-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "oke-gateway-api-controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "oke-gateway-api-controller.serviceAccountName" . }}
      volumes:
      - name: oci-config-volume
        secret:
          secretName: oci-api-key
      containers:
      - name: controller
        image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
        args:
        - start
        - --json-logs
        - --env
        - in-cluster-debug
        ports: [] # Add ports if needed for health checks etc.
        # Add livenessProbe, readinessProbe here if configured
        resources:
          {{- toYaml .Values.deployment.resources | nindent 10 }}
        env:
        - name: OCI_CONFIG_FILE
          value: /etc/oci/config
        volumeMounts:
        - name: oci-config-volume
          mountPath: "/etc/oci"
          readOnly: true